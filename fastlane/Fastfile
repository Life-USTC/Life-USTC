platform :ios do
  # ! Local methods:
  desc "[Local] Generate new certificates"
  lane :generate_new_certificates do
    sync_code_signing(
      type: "development",
      app_identifier: [
        "dev.tiankaima.Life-USTC",
        "dev.tiankaima.Life-USTC.Widget",
      ],
      force_for_new_devices: true,
      readonly: false,
    )

    sync_code_signing(
      type: "appstore",
      app_identifier: [
        "dev.tiankaima.Life-USTC",
        "dev.tiankaima.Life-USTC.Widget",
      ],
      readonly: false,
    )
  end

  lane :refresh_profiles do
    match(
      type: "development",
      force: true,
      app_identifier: [
        "dev.tiankaima.Life-USTC",
        "dev.tiankaima.Life-USTC.Widget",
      ],
    )
    match(
      type: "adhoc",
      force: true,
      app_identifier: [
        "dev.tiankaima.Life-USTC",
        "dev.tiankaima.Life-USTC.Widget",
      ],
    )
  end

  desc "[Local] Register new device"
  lane :register_new_device do |options|
    device_name = prompt(text: "Enter the device name: ")
    device_udid = prompt(text: "Enter the device UDID: ")
    device_hash = {}
    device_hash[device_name] = device_udid
    register_devices(
      devices: device_hash,
    )
    refresh_profiles
  end

  desc "Build"
  lane :build do
    certificates
    xcversion
    build_app(scheme: "Life@USTC")
  end

  # ! CI methods:
  desc "Update version number (if env['GITHUB-TAG'] contains tag in format v1.2.3)"
  lane :update_version_number do
    tag = ENV["GITHUB_TAG"]
    if tag.start_with?("v")
      increment_version_number(
        version_number: tag[1..],
      )
    end
  end

  desc "Get certificates"
  lane :certificates do
    sync_code_signing(
      type: "development",
      app_identifier: [
        "dev.tiankaima.Life-USTC",
        "dev.tiankaima.Life-USTC.Widget",
      ],
      force_for_new_devices: true,
      readonly: true,
    )

    sync_code_signing(
      type: "appstore",
      app_identifier: [
        "dev.tiankaima.Life-USTC",
        "dev.tiankaima.Life-USTC.Widget",
      ],
      readonly: true,
    )
  end

  desc "Load ASC API Keys"
  lane :load_asc_api_key do
    app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_content: ENV["ASC_KEY"],
      is_key_content_base64: true,
      in_house: false,
    )
  end

  desc "Bump build number based TestFlight"
  lane :fetch_and_increment_build_number do
    app_identifier = "dev.tiankaima.Life-USTC"
    api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

    current_version = get_version_number(
      target: "Life@USTC",
    )

    latest_build_number = latest_testflight_build_number(
      api_key: api_key,
      version: current_version,
      app_identifier: app_identifier,
    )

    increment_build_number(
      build_number: (latest_build_number + 1),
    )
  end

  desc "Deploy to Testflight"
  lane :deploy_to_testflight do
    setup_ci
    load_asc_api_key
    certificates

    fetch_and_increment_build_number
    xcversion
    build_app(scheme: "Life@USTC")

    upload_to_testflight(
      changelog: ENV["COMMIT_MESSAGE"],
      distribute_external: true,
      groups: [
        "e95dd2d2-06df-4dcf-8361-eaa442132b5f",
        "1d88df5c-6668-4ff9-a352-814fa5cd1692",
      ],
      skip_submission: false,
      notify_external_testers: true,
      skip_waiting_for_build_processing: false,
    )
  end

  desc "Deploy to App Store"
  lane :deploy_to_app_store do
    setup_ci
    load_asc_api_key
    certificates

    fetch_and_increment_build_number
    xcversion
    build_app(scheme: "Life@USTC")

    upload_to_app_store(
      force: true,
      run_precheck_before_submit: false,
      submit_for_review: false,
    )
  end
end
